{"version":3,"sources":["theme/index.ts","components/Identicon.tsx","components/ConnectButton.tsx","components/AccountModal.tsx","components/Header/Header.js","components/Breadcrumb/Breadcrumb.js","components/getRpcUrl.tsx","components/useWeb3.tsx","config/token.js","components/addressHelper.tsx","components/useContracts.tsx","components/callHelper.tsx","components/RefreshContext.tsx","components/useRefresh.ts","components/formatBalance.tsx","components/Auctions/AuctionsTwo.tsx","theme/auctions.js","App.tsx","index.tsx"],"names":["extendTheme","fonts","heading","body","StyledIdenticon","styled","div","Identicon","ref","useRef","account","useEthers","useEffect","current","innerHTML","appendChild","Jazzicon","parseInt","slice","ConnectButton","handleOpenModal","activateBrowserWallet","etherBalance","useEtherBalance","display","alignItems","background","borderRadius","py","px","color","fontSize","parseFloat","formatEther","toFixed","onClick","bg","border","_hover","borderStyle","borderColor","backgroundColor","m","height","fontWeight","mr","length","_active","AccountModal","isOpen","onClose","deactivate","isCentered","size","style","paddingTop","paddingBottom","pt","pb","mb","justifyContent","variant","textDecoration","mt","lineHeight","ml","alignContent","Copy","href","isExternal","ExternalLink","borderBottomLeftRadius","borderBottomRightRadius","p","textAlign","Header","useDisclosure","onOpen","id","data-aos","data-aos-delay","className","flexWrap","src","alt","flex","marginTop","Component","getRpcUrl","useWeb3","Web3","givenProvider","providers","HttpProvider","staking","97","56","airt","variable","standard","getStakingAddress","addresses","useContract","abi","add","eth","Contract","useAirtContract","ape","useVariableContract","setApprovalForAll","airtContract","stakingContract","approved","a","methods","options","address","send","from","stake","tokenIds","unstake","claim","RefreshContext","React","createContext","slow","fast","RefreshContextProvider","children","useState","setSlow","setFast","isBrowserTabActiveRef","onVisibilityChange","document","hidden","window","addEventListener","removeEventListener","useIsBrowserTabActive","interval","setInterval","prev","clearInterval","Provider","value","useRefresh","useContext","fastRefresh","slowRefresh","getFullDisplayBalance","balance","decimals","dividedBy","BigNumber","pow","initStakedInfo","metadatas","initUnStakedInfo","space","AuctionsTwo","requestedApproval","setRequestedApproval","isApproved","setIsApproved","stakingAddress","fetchFlag","setFetchFlag","redraw","setRedraw","unstakedinfo","setUnStakedInfo","stakedinfo","setStakedInfo","reward","setReward","selectedUnStakedTokenIds","setSelectedUnStakedTokenIds","selectedStakedTokenIds","setSelectedStakedTokenIds","console","log","fetchIsApprovedForAll","fetchUnStakedInfo","fetchStakedInfo","fetchReward","pendingTotalReward","call","result","isApprovedForAll","isApp","balanceOf","a1","tokenOfOwnerByIndex","tokenId","tokenURI","metadata","getImageHash","image","push","unstaked","stakingAmount","userInfo","tokenInfo","staked","IsSelected","type","list","removeItemFromArray","oldlist","i","pop","unstakedImageClick","index","newlist","newlist1","stakedImageClick","handleStake","handleClaim","handleUnStake","hashVal","fetch","response","json","responseJson","error","fontFamily","width","map","idx","isSelected","marginLeft","marginRight","disabled","minHeight","padding","toString","Auctions","App","theme","ReactDOM","render","StrictMode","DAppProvider","config","getElementById"],"mappings":"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","file":"static/js/main.204b6857.chunk.js","sourcesContent":["import { extendTheme } from \"@chakra-ui/react\";\r\n\r\nexport default extendTheme({\r\n  fonts: {\r\n    heading: \"Inter\",\r\n    body: \"Inter\",\r\n  },\r\n});\r\n","import { useEffect, useRef } from \"react\";\r\nimport { useEthers } from \"@usedapp/core\";\r\nimport Jazzicon from \"@metamask/jazzicon\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst StyledIdenticon = styled.div`\r\n  height: 1rem;\r\n  width: 1rem;\r\n  border-radius: 1.125rem;\r\n  background-color: black;\r\n`;\r\n\r\nexport default function Identicon() {\r\n  const ref = useRef<HTMLDivElement>();\r\n  const { account } = useEthers();\r\n\r\n  useEffect(() => {\r\n    if (account && ref.current) {\r\n      ref.current.innerHTML = \"\";\r\n      ref.current.appendChild(Jazzicon(16, parseInt(account.slice(2, 10), 16)));\r\n    }\r\n  }, [account]);\r\n\r\n  return <StyledIdenticon ref={ref as any} />;\r\n}\r\n","import { Button, Box, Text } from \"@chakra-ui/react\";\r\nimport { useEthers, useEtherBalance } from \"@usedapp/core\";\r\nimport { formatEther } from \"@ethersproject/units\";\r\nimport Identicon from \"./Identicon\";\r\n\r\ntype Props = {\r\n  handleOpenModal: any;\r\n};\r\n\r\nexport default function ConnectButton({ handleOpenModal }: Props) {\r\n  const { activateBrowserWallet, account } = useEthers();\r\n  const etherBalance = useEtherBalance(account);\r\n\r\n  function handleConnectWallet() {\r\n    activateBrowserWallet();\r\n  }\r\n\r\n  return account ? (\r\n    <Box\r\n      display=\"flex\"\r\n      alignItems=\"center\"\r\n      background=\"white\"\r\n      borderRadius=\"xl\"\r\n      py=\"0\"\r\n    >\r\n      <Box px=\"3\">\r\n        <Text color=\"black\" fontSize=\"md\">\r\n          {etherBalance && parseFloat(formatEther(etherBalance)).toFixed(3)} BNB\r\n        </Text>\r\n      </Box>\r\n      <Button\r\n        onClick={handleOpenModal}\r\n        bg=\"gray.800\"\r\n        border=\"1px solid transparent\"\r\n        _hover={{\r\n          border: \"1px\",\r\n          borderStyle: \"solid\",\r\n          borderColor: \"blue.400\",\r\n          backgroundColor: \"gray.700\",\r\n        }}\r\n        borderRadius=\"xl\"\r\n        m=\"1px\"\r\n        px={3}\r\n        height=\"38px\"\r\n      >\r\n        <Text color=\"white\" fontSize=\"md\" fontWeight=\"medium\" mr=\"2\">\r\n          {account &&\r\n            `${account.slice(0, 6)}...${account.slice(\r\n              account.length - 4,\r\n              account.length\r\n            )}`}\r\n        </Text>\r\n        <Identicon />\r\n      </Button>\r\n    </Box>\r\n  ) : (\r\n    <Button\r\n      onClick={handleConnectWallet}\r\n      // bg=\"blue.800\"\r\n      color=\"black\"\r\n      fontSize=\"lg\"\r\n      fontWeight=\"medium\"\r\n      borderRadius=\"xl\"\r\n      //border=\"1px solid transparent\"\r\n      _hover={{\r\n        // borderColor: \"blue.700\",\r\n        //color: \"blue.400\",\r\n      }}\r\n      _active={{\r\n        // backgroundColor: \"whiteAlpha.100\",\r\n        //borderColor: \"blue.700\",\r\n      }}\r\n    >\r\n      Connect to a wallet\r\n    </Button>\r\n  );\r\n}\r\n","import {\r\n  Box,\r\n  Button,\r\n  Flex,\r\n  Link,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\nimport { ExternalLinkIcon, CopyIcon } from \"@chakra-ui/icons\";\r\nimport { useEthers } from \"@usedapp/core\";\r\nimport Identicon from \"./Identicon\";\r\n\r\ntype Props = {\r\n  isOpen: any;\r\n  onClose: any;\r\n};\r\n\r\nexport default function AccountModal({ isOpen, onClose }: Props) {\r\n  const { account, deactivate } = useEthers();\r\n\r\n  function handleDeactivateAccount() {\r\n    deactivate();\r\n    onClose();\r\n  }\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose} isCentered size=\"md\">\r\n      <ModalOverlay />\r\n      <ModalContent\r\n        background=\"gray.900\"\r\n        border=\"1px\"\r\n        borderStyle=\"solid\"\r\n        borderColor=\"gray.700\"\r\n        borderRadius=\"3xl\"\r\n        style={{paddingTop: 30, paddingBottom: 0}}\r\n      >\r\n        <ModalHeader color=\"white\" px={4} fontSize=\"lg\" fontWeight=\"medium\">\r\n          Account\r\n        </ModalHeader>\r\n        <ModalCloseButton\r\n          color=\"white\"\r\n          fontSize=\"sm\"\r\n          _hover={{\r\n            color: \"whiteAlpha.700\",\r\n          }}\r\n        />\r\n        <ModalBody pt={0} px={4}>\r\n          <Box\r\n            borderRadius=\"3xl\"\r\n            border=\"1px\"\r\n            borderStyle=\"solid\"\r\n            borderColor=\"gray.600\"\r\n            px={5}\r\n            pt={4}\r\n            pb={2}\r\n            mb={3}\r\n          >\r\n            <Flex justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\r\n              <Text color=\"gray.400\" fontSize=\"sm\">\r\n                Connected with MetaMask\r\n              </Text>\r\n              <Button\r\n                variant=\"outline\"\r\n                size=\"sm\"\r\n                borderColor=\"blue.800\"\r\n                borderRadius=\"3xl\"\r\n                color=\"blue.500\"\r\n                fontSize=\"13px\"\r\n                fontWeight=\"normal\"\r\n                px={2}\r\n                height=\"26px\"\r\n                _hover={{\r\n                  background: \"none\",\r\n                  borderColor: \"blue.300\",\r\n                  textDecoration: \"underline\",\r\n                }}\r\n                onClick={handleDeactivateAccount}\r\n              >\r\n                Change\r\n              </Button>\r\n            </Flex>\r\n            <Flex alignItems=\"center\" mt={2} mb={4} lineHeight={1}>\r\n              <Identicon />\r\n              <Text\r\n                color=\"white\"\r\n                fontSize=\"xl\"\r\n                fontWeight=\"semibold\"\r\n                ml=\"2\"\r\n                lineHeight=\"1.1\"\r\n              >\r\n                {account &&\r\n                  `${account.slice(0, 6)}...${account.slice(\r\n                    account.length - 4,\r\n                    account.length\r\n                  )}`}\r\n              </Text>\r\n            </Flex>\r\n            <Flex alignContent=\"center\" m={3}>\r\n              <Button\r\n                variant=\"link\"\r\n                color=\"gray.400\"\r\n                fontWeight=\"normal\"\r\n                fontSize=\"sm\"\r\n                _hover={{\r\n                  textDecoration: \"none\",\r\n                  color: \"whiteAlpha.800\",\r\n                }}\r\n              >\r\n                <CopyIcon mr={1} />\r\n                Copy Address\r\n              </Button>\r\n              <Link\r\n                fontSize=\"sm\"\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                href={`https://ropsten.etherscan.io/address/${account}`}\r\n                isExternal\r\n                color=\"gray.400\"\r\n                ml={6}\r\n                _hover={{\r\n                  color: \"whiteAlpha.800\",\r\n                  textDecoration: \"underline\",\r\n                }}\r\n              >\r\n                <ExternalLinkIcon mr={1} />\r\n                View on Explorer\r\n              </Link>\r\n            </Flex>\r\n          </Box>\r\n        </ModalBody>\r\n\r\n        <ModalFooter\r\n          justifyContent=\"end\"\r\n          background=\"gray.700\"\r\n          borderBottomLeftRadius=\"3xl\"\r\n          borderBottomRightRadius=\"3xl\"\r\n          p={6}\r\n        >\r\n          <Text\r\n            color=\"white\"\r\n            textAlign=\"left\"\r\n            fontWeight=\"medium\"\r\n            fontSize=\"md\"\r\n          >\r\n            Your transactions will appear here...\r\n          </Text>\r\n        </ModalFooter>\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { ChakraProvider, useDisclosure } from \"@chakra-ui/react\";\r\nimport { Flex } from '@chakra-ui/react';\r\nimport Layout from \"../Layout\";\r\nimport ConnectButton from \"../ConnectButton\";\r\nimport AccountModal from \"../AccountModal\";\r\n\r\nconst Header = () => {\r\n\r\n    const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n    return (\r\n        <header id=\"header container\" >\r\n            {/* Navbar */}\r\n            <nav data-aos=\"zoom-out\" data-aos-delay={800} className=\"\">\r\n            <div  style={{display:\"flex\", justifyContent:\"center\", alignItems:\"center\", flexWrap:\"wrap\"}}>\r\n                < a href='https://app.airnfts.com/creators/0x442B133945C0b23b2d092e771Af8784b7Eb2c75f' style={{height:\"50px\"}}>\r\n                    <img className=\"\" style={{height:\"100%\"}} src=\"img/logo_white.png\"  alt=\"sticky brand-logo\" />\r\n                </a>\r\n                <span style={{flex:\"1\"}}></span>           \r\n                <span className=\"\" style={{marginTop:20}}>\r\n                    <ConnectButton  handleOpenModal={onOpen} />\r\n                    <AccountModal isOpen={isOpen} onClose={onClose} />                    \r\n                </span>\r\n            </div>\r\n        </nav>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\n\r\nclass Breadcrumb extends Component {\r\n    render() {\r\n        return (\r\n            <section className=\"breadcrumb-area overlay-dark d-flex align-items-center\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            {/* Breamcrumb Content */}\r\n                            <div className=\"breadcrumb-content text-center\">\r\n                                <h2 className=\"m-0\">{this.props.title}</h2>\r\n                                <h5>Earn $VARIABLE more, Just staking</h5>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Breadcrumb;","const getRpcUrl = () => {\r\n    return \"https://rinkeby.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161\";\r\n    // return https://mainnet.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161\r\n  }\r\n  \r\n  export default getRpcUrl;","import Web3 from \"web3\";\r\nimport getRpcUrl from \"./getRpcUrl\";\r\n\r\nexport const useWeb3 = () => {\r\n  return new Web3(Web3.givenProvider || new Web3.providers.HttpProvider(getRpcUrl()));\r\n};","export default {\r\n    staking: {\r\n        97: \"0xc40C070bC33aE14a5D706e519E9c44A925457238\",\r\n        56: \"\",\r\n    },\r\n    airt: {\r\n        97: \"0xF5db804101d8600c26598A1Ba465166c33CdAA4b\",\r\n        56: \"0xF5db804101d8600c26598A1Ba465166c33CdAA4b\",\r\n    },\r\n    variable: {\r\n        97: \"0x016CF83732f1468150D87dCC5BdF67730B3934D3\",\r\n        56: \"0x016CF83732f1468150D87dCC5BdF67730B3934D3\",\r\n    },\r\n    standard: {\r\n        97: \"0xe559525118f9Ae71e2b21806B15332D17A00EBfF\",\r\n        56: \"\",\r\n    },\r\n};","import addresses from '../config/token'\r\n\r\nconst chainId = 97\r\n// const chainId = 4\r\n// const chainId = 1\r\n\r\nexport const getStakingAddress = () => {\r\n  return addresses.staking[chainId]\r\n}\r\n\r\nexport const getVariableAddress = () => {\r\n  return addresses.variable[chainId]\r\n}\r\n\r\nexport const getAirtAddress = () => {\r\n  return addresses.airt[chainId]\r\n}\r\n","import {\r\n    getStakingAddress,\r\n    getAirtAddress,\r\n    getVariableAddress,\r\n  } from \"./addressHelper\";\r\n  import { useWeb3 } from \"./useWeb3\";\r\n  \r\n  import staking from \"../config/stakingabi.json\";\r\n  import variable from \"../config/variableabi.json\";\r\n  import ape from \"../config/apeabi.json\";\r\n  \r\n  const useContract = (abi: any, add: any) => {\r\n    const web3 = useWeb3();\r\n    return new web3.eth.Contract(abi, add);\r\n  };\r\n  /**\r\n   * Helper hooks to get specific contracts (by ABI)\r\n   */\r\n  \r\n  export const useAirtContract = () => {\r\n    return useContract(ape, getAirtAddress());\r\n  };\r\n  \r\n  export const useStakingContract = () => {\r\n    return useContract(staking, getStakingAddress());\r\n  };\r\n  \r\n  export const useVariableContract = () => {\r\n    return useContract(variable, getVariableAddress());\r\n  };\r\n  \r\n  export default useContract;\r\n  ","import BigNumber from \"bignumber.js\";\r\n\r\nexport const setApprovalForAll = async (airtContract: any, stakingContract: any, account: any, approved: any) => {\r\n  return airtContract.methods\r\n    .setApprovalForAll(\r\n        stakingContract.options.address,\r\n        approved\r\n    )\r\n    .send({ from: account });\r\n};\r\n\r\nexport const approve = async (airtContract: any, stakingContract: any, account: any, tokenId: any) => {\r\n  return airtContract.methods\r\n    .approve(\r\n        stakingContract.options.address,\r\n        tokenId\r\n    )\r\n    .send({ from: account });\r\n};\r\n\r\nexport const stake = async (\r\n  stakingContract: any,\r\n  tokenIds: any,\r\n  account: any\r\n) => {\r\n  return stakingContract.methods\r\n    .stake(tokenIds)\r\n    .send({ from: account });\r\n};\r\n\r\nexport const unstake = async (stakingContract: any, tokenIds: any, account: any) => {\r\n  return stakingContract.methods.unstake(tokenIds).send({ from: account });\r\n};\r\n\r\nexport const claim = async (stakingContract: any, account: any) => {\r\n  return stakingContract.methods.claim().send({ from: account });\r\n};\r\n","import React, { useState, useEffect, useRef, ReactNode } from 'react'\r\n\r\nconst FAST_INTERVAL = 10000\r\nconst SLOW_INTERVAL = 60000\r\n\r\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\r\n\r\n// Check if the tab is active in the user browser\r\nconst useIsBrowserTabActive = () => {\r\n  const isBrowserTabActiveRef = useRef(true)\r\n\r\n  useEffect(() => {\r\n    const onVisibilityChange = () => {\r\n      isBrowserTabActiveRef.current = !document.hidden\r\n    }\r\n\r\n    window.addEventListener('visibilitychange', onVisibilityChange)\r\n\r\n    return () => {\r\n      window.removeEventListener('visibilitychange', onVisibilityChange)\r\n    }\r\n  }, [])\r\n\r\n  return isBrowserTabActiveRef\r\n}\r\n\r\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\r\nconst RefreshContextProvider = ({ children }: { children: any }) => {\r\n  const [slow, setSlow] = useState(0)\r\n  const [fast, setFast] = useState(0)\r\n  const isBrowserTabActiveRef = useIsBrowserTabActive()\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      if (isBrowserTabActiveRef.current) {\r\n        setFast((prev) => prev + 1)\r\n      }\r\n    }, FAST_INTERVAL)\r\n    return () => clearInterval(interval)\r\n  }, [isBrowserTabActiveRef])\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      if (isBrowserTabActiveRef.current) {\r\n        setSlow((prev) => prev + 1)\r\n      }\r\n    }, SLOW_INTERVAL)\r\n    return () => clearInterval(interval)\r\n  }, [isBrowserTabActiveRef])\r\n\r\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\r\n}\r\n\r\nexport { RefreshContext, RefreshContextProvider }\r\n","import { useContext } from 'react'\r\nimport { RefreshContext } from './RefreshContext'\r\n\r\nconst useRefresh = () => {\r\n  const { fast, slow } = useContext(RefreshContext)\r\n  return { fastRefresh: fast, slowRefresh: slow }\r\n}\r\n\r\nexport default useRefresh\r\n","import BigNumber from \"bignumber.js\";\r\n\r\nexport const formatNumber = (num: any, decimalPlace: any) => {\r\n  if (num % 1 != 0) return num.toFixed(decimalPlace);\r\n  return num;\r\n};\r\n\r\nexport const getBalanceNumber = (balance: any, decimals = 18) => {\r\n  const displayBalance = new BigNumber(balance).dividedBy(\r\n    new BigNumber(10).pow(decimals)\r\n  );\r\n\r\n  var num = displayBalance.toNumber();\r\n  return formatNumber(num, 3);\r\n};\r\n\r\nexport const getFullDisplayBalance = (balance: any, decimals = 18) => {\r\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed();\r\n};\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { Fragment, useEffect, useState } from 'react'\r\nimport { useEthers } from '@usedapp/core'\r\nimport { useWeb3 } from '../useWeb3'\r\nimport { StakedInfo, UnStakedInfo } from '../types'\r\nimport {\r\n  useAirtContract,\r\n  useStakingContract,\r\n  useVariableContract,\r\n} from '../useContracts'\r\nimport { claim, setApprovalForAll, stake, unstake } from '../callHelper'\r\nimport { getStakingAddress } from '../addressHelper'\r\nimport useRefresh from '../useRefresh'\r\nimport { getFullDisplayBalance } from '../formatBalance'\r\n\r\nconst initStakedInfo: UnStakedInfo = {\r\n  balance: new BigNumber(0),\r\n  tokenIds: [],\r\n  metadatas: [],\r\n}\r\n\r\nconst initUnStakedInfo: StakedInfo = {\r\n  balance: new BigNumber(0),\r\n  tokenIds: [],\r\n  metadatas: [],\r\n}\r\n\r\nconst space = <Fragment>&nbsp;&nbsp;</Fragment>;\r\n\r\nconst AuctionsTwo = () => {\r\n  const web3 = useWeb3()\r\n  const { account } = useEthers()\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const [isApproved, setIsApproved] = useState(false)\r\n  const airtContract = useAirtContract()\r\n  const stakingContract = useStakingContract()\r\n  const variableContract = useVariableContract()\r\n  const stakingAddress = getStakingAddress()\r\n\r\n  const { slowRefresh, fastRefresh } = useRefresh()\r\n\r\n  const [fetchFlag, setFetchFlag] = useState(true)\r\n  const [redraw, setRedraw] = useState(false)\r\n\r\n  const [unstakedinfo, setUnStakedInfo] = useState<UnStakedInfo>()\r\n  const [stakedinfo, setStakedInfo] = useState<StakedInfo>()\r\n\r\n  const [reward, setReward] = useState(new BigNumber(0))\r\n\r\n  const [selectedUnStakedTokenIds, setSelectedUnStakedTokenIds] = useState<BigNumber[]>([])\r\n  const [selectedStakedTokenIds, setSelectedStakedTokenIds] = useState<BigNumber[]>([])\r\n\r\n  useEffect(() => {\r\n    if (fetchFlag && account) {\r\n      console.log('fetchFlag:  TRUE')\r\n      fetchIsApprovedForAll()\r\n      fetchUnStakedInfo()\r\n      fetchStakedInfo()\r\n      setFetchFlag(false)\r\n    }\r\n    if (stakingContract && account) fetchReward()\r\n  }, [account, fetchFlag, slowRefresh])\r\n\r\n  const fetchReward = async () => {\r\n    const result = await stakingContract.methods\r\n      .pendingTotalReward(account)\r\n      .call()\r\n    setReward(getFullDisplayBalance(new BigNumber(result)))\r\n  }\r\n\r\n  const fetchIsApprovedForAll = async () => {\r\n    const isApp = await airtContract.methods.isApprovedForAll(account, stakingAddress).call()\r\n    setIsApproved(isApp)\r\n  }\r\n\r\n  async function fetchUnStakedInfo() {\r\n    var result: UnStakedInfo = initUnStakedInfo\r\n    result.tokenIds = []\r\n    result.metadatas = []\r\n    const balance = await airtContract.methods.balanceOf(account).call()\r\n    let a1 = 0\r\n    for (a1 = 0; a1 < balance; a1++) {\r\n      const tokenId = await airtContract.methods\r\n        .tokenOfOwnerByIndex(account, a1)\r\n        .call()\r\n      const metadata = await airtContract.methods.tokenURI(tokenId).call()\r\n      const image = await getImageHash(metadata);\r\n      result.tokenIds.push(tokenId)\r\n      result.metadatas.push(image)\r\n    }\r\n\r\n    var unstaked: StakedInfo = initUnStakedInfo\r\n    unstaked.tokenIds = result.tokenIds.slice()\r\n    unstaked.metadatas = result.metadatas.slice()\r\n    setUnStakedInfo(unstaked)\r\n    setSelectedUnStakedTokenIds([])\r\n    setSelectedStakedTokenIds([])\r\n  }\r\n\r\n  const fetchStakedInfo = async () => {\r\n    var result: StakedInfo = initStakedInfo\r\n    result.tokenIds = []\r\n    result.metadatas = []\r\n\r\n    const balance = await stakingContract.methods.stakingAmount(account).call()\r\n    let a = 0\r\n    for (a = 0; a < balance; a++) {\r\n      const tokenInfo = await stakingContract.methods\r\n        .userInfo(account, a)\r\n        .call()\r\n      const metadata = await airtContract.methods.tokenURI(tokenInfo.tokenId).call()\r\n      const image = await getImageHash(metadata);\r\n      result.tokenIds.push(tokenInfo.tokenId)\r\n      result.metadatas.push(image)\r\n    }\r\n    var staked: StakedInfo = initStakedInfo\r\n    staked.tokenIds = result.tokenIds.slice()\r\n    staked.metadatas = result.metadatas.slice()\r\n    setStakedInfo(staked)\r\n    setSelectedUnStakedTokenIds([])\r\n    setSelectedStakedTokenIds([])\r\n  }\r\n\r\n  const IsSelected = (type: any, tokenId: any) => {\r\n    var a = 0\r\n    const list = type == 0 ? selectedUnStakedTokenIds : selectedStakedTokenIds\r\n    for (a = 0; a < list.length; a++) {\r\n      if (list[a] == tokenId) {\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  const removeItemFromArray = (\r\n    oldlist: BigNumber[],\r\n    tokenId: any,\r\n  ): BigNumber[] => {\r\n    var list: BigNumber[] = oldlist\r\n    var i = 0\r\n    for (i = 0; i < list.length; i++) {\r\n      if (list[i] == tokenId) {\r\n        list[i] = list[list.length - 1]\r\n        list.pop()\r\n        break\r\n      }\r\n    }\r\n    return list\r\n  }\r\n\r\n  const unstakedImageClick = async (tokenId: BigNumber, index: any) => {\r\n    console.log('unstakedimageclick')\r\n    if (await IsSelected(0, tokenId)) {\r\n      let newlist: BigNumber[] = await removeItemFromArray(\r\n        selectedUnStakedTokenIds,\r\n        tokenId,\r\n      )\r\n      setSelectedUnStakedTokenIds(newlist)\r\n    } else {\r\n      var newlist1: BigNumber[] = selectedUnStakedTokenIds\r\n      newlist1.push(tokenId)\r\n      setSelectedUnStakedTokenIds(newlist1)\r\n    }\r\n    setRedraw(!redraw)\r\n  }\r\n\r\n  const stakedImageClick = async (tokenId: BigNumber, index: any) => {\r\n    if (await IsSelected(1, tokenId)) {\r\n      const newlist: BigNumber[] = await removeItemFromArray(\r\n        selectedStakedTokenIds,\r\n        tokenId,\r\n      )\r\n      setSelectedStakedTokenIds(newlist)\r\n    } else {\r\n      var newlist1: BigNumber[] = selectedStakedTokenIds\r\n      newlist1.push(tokenId)\r\n      setSelectedStakedTokenIds(newlist1)\r\n    }\r\n    setRedraw(!redraw)\r\n  }\r\n\r\n  const handleStake = async () => {\r\n    if (!isApproved) {\r\n      try {\r\n        setRequestedApproval(true)\r\n        await setApprovalForAll(airtContract, stakingContract, account, true)\r\n        setIsApproved(true)\r\n        setRequestedApproval(false)\r\n      } catch {\r\n        console.log('Approve failed')\r\n        setRequestedApproval(false)\r\n      }\r\n    } else {\r\n      try {\r\n        setRequestedApproval(true)\r\n        await stake(stakingContract, selectedUnStakedTokenIds, account)\r\n        setRequestedApproval(false)\r\n        setFetchFlag(true)\r\n      } catch {\r\n        console.log('Stake failed')\r\n        setRequestedApproval(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleClaim = async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await claim(stakingContract, account)\r\n      setIsApproved(true)\r\n      setRequestedApproval(false)\r\n    } catch {\r\n      console.log('Claim failed')\r\n      setRequestedApproval(false)\r\n    }\r\n  }\r\n\r\n  const handleUnStake = async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await unstake(stakingContract, selectedStakedTokenIds, account)\r\n      setIsApproved(true)\r\n      setRequestedApproval(false)\r\n      setFetchFlag(true)\r\n    } catch {\r\n      console.log('UnStake failed')\r\n      setRequestedApproval(false)\r\n    }\r\n  }\r\n\r\n  async function getImageHash(hashVal: any) {\r\n    try {\r\n      let response = await fetch(hashVal);\r\n      let responseJson = await response.json();\r\n      console.log(responseJson.image);\r\n      return responseJson.image;\r\n     } catch(error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section className=\"\">\r\n      <div style={{ display: 'flex', justifyContent: 'space-between' , flexWrap:\"wrap\"}}>\r\n        {/* **<!-- this is UNSTAKED part of Panel (LEFT)-->** */}\r\n        <div\r\n          className=\"pad\"\r\n        >\r\n          <div className=\"row text-center\">\r\n            <h3 className=\"em-wide\" style={{fontFamily: 'Montserrat'}}>UNSTAKED</h3>\r\n          </div>\r\n          {/* <div className=\"row\">                     */}\r\n          <div\r\n            className=\"radiuspanel\"\r\n            style={{\r\n              flex: 1,\r\n              height: 400,\r\n              width: '100%',\r\n              backgroundColor: 'rgb(188 186 199 / 23%)',\r\n            }}\r\n          >\r\n            <div  className='scrollprop' >\r\n              <div className=\"card-caption col-12 p-0\">\r\n                {/* Card Body */}\r\n                <div className=\"row justify-content-center\" style={{ }}>\r\n                  {unstakedinfo &&\r\n                    unstakedinfo.tokenIds &&\r\n                    unstakedinfo.tokenIds.map((tokenId: any, idx: any) => {\r\n                      const image = unstakedinfo.metadatas[idx]\r\n                      const isSelected = IsSelected(0, tokenId)\r\n                      return (\r\n                        <div\r\n                          className=\"col-5 col-md-5 col-lg-5 col-xl-3 item\"\r\n                          style={{\r\n                            marginLeft: 1,\r\n                            marginRight: 1,\r\n                            marginTop: 30                            \r\n                          }}\r\n                          onClick={() => unstakedImageClick(tokenId, idx)}\r\n                        >\r\n                          <img\r\n                            className={isSelected ? 'withBorder' : 'noBorder'}\r\n                            src={image}\r\n                            alt=\"\"\r\n                            style={{ width: '100%' }}\r\n                          />\r\n                          {/* <img className=\"withBorder\" src={image} alt=\"\" style={{width:'100%'}}/> */}\r\n                          <div style={{ color: 'white', textAlign: 'center' }}>\r\n                            {tokenId}\r\n                          </div>\r\n                        </div>\r\n                      )\r\n                    })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* </div>                     */}\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"text-center\">\r\n            <p style={{ color: 'white', fontSize: 15, marginTop: 20 , fontFamily: 'Montserrat'}}>\r\n            SELECT THE APES YOU WOULD  LIKE TO STAKE AND<br/>\r\n            CLICK THE BUTTON BELOW.\r\n            </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"row bottomButton\">\r\n            <button\r\n              className=\"btn mt-4 em-wide\"\r\n              disabled={requestedApproval}\r\n              style={{fontFamily: 'MontserratBold'}}  \r\n              onClick={handleStake}\r\n            >\r\n              {isApproved ? 'STAKE' : 'APPROVE'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* <div style={{ flex: 1 }}></div> */}\r\n\r\n        {/* **<!-- this is STAKED part of Panel (RIGHT)-->** */}\r\n        <div className='pad'\r\n        >\r\n          <div className=\"row text-center\">\r\n            <h3 className=\"em-wide\" style={{fontFamily: 'Montserrat'}}>STAKED</h3>\r\n          </div>\r\n          <div\r\n            className=\"radiuspanel\"\r\n            style={{\r\n              flex: 1,\r\n              minHeight: 400,\r\n              width: '100%',\r\n              backgroundColor: 'rgb(188 186 199 / 23%)',\r\n            }}\r\n          >\r\n            <div className='scrollprop' >\r\n              <div className=\"card-caption col-12 p-0\">\r\n                {/* Card Body */}\r\n                <div className=\"row justify-content-center\" style={{ padding: 10 }}>\r\n                  {stakedinfo &&\r\n                    stakedinfo.tokenIds &&\r\n                    stakedinfo.tokenIds.map((tokenId: any, idx: any) => {\r\n                      const image = stakedinfo.metadatas[idx]\r\n                      const isSelected = IsSelected(1, tokenId)\r\n                      return (\r\n                        <div\r\n                          className=\"col-5 col-md-5 col-lg-5 col-xl-3 item\"\r\n                          style={{\r\n                            marginLeft: 1,\r\n                            marginRight: 1,\r\n                            marginTop: 30                            \r\n                          }}\r\n                          onClick={() => stakedImageClick(tokenId, idx)}\r\n                        >\r\n                          <img\r\n                            className={isSelected ? 'withBorder' : 'noBorder'}\r\n                            src={image}\r\n                            alt=\"\"\r\n                            style={{ width: '100%' }}\r\n                          />\r\n                          {/* <img className=\"withBorder\" src={image} alt=\"\" style={{width:'100%'}}/> */}\r\n                          <div style={{ color: 'white', textAlign: 'center' }}>\r\n                            {tokenId}\r\n                          </div>\r\n                        </div>\r\n                      )\r\n                    })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row justify-content-center\">            \r\n            {/* Intro */}\r\n            <div className=\"text-center\">\r\n            <p style={{ color: 'white', fontSize: 15, marginTop: 20 , fontFamily: 'Montserrat'}}>\r\n            SECLECT THE APES YOU WOULD  LIKE TO UNSTAKE AND<br/>\r\n            CLICK THE BUTTON BELOW.\r\n            </p>\r\n            </div>        \r\n          </div>\r\n          <div className=\"row bottomButton\" style={{display:\"flex\", justifyContent:\"center\" }}>\r\n              <button\r\n                className=\"btn mt-4 em-wide claimbtn\"\r\n                disabled={requestedApproval}\r\n                onClick={handleClaim}\r\n              >\r\n                {space}CLAIM{space}\r\n              </button>              \r\n              <button\r\n                className=\"btn mt-4 em-wide\"\r\n                disabled={requestedApproval}\r\n                style={{fontFamily: 'MontserratBold'}}  \r\n                onClick={handleUnStake}\r\n              >\r\n                UNSTAKE\r\n              </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        className=\"text-center row col-12\"\r\n        style={{ color: 'white', marginTop: 0 }}\r\n      >\r\n        <h5 className='em-wide' style={{ textAlign: 'center', width: '100%', fontFamily: 'Montserrat'}}  >\r\n            AirNFT TOKEN EARNED<br/>\r\n            {reward.toString()}\r\n        </h5>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default AuctionsTwo\r\n","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport AuctionsTwo from '../components/Auctions/AuctionsTwo';\r\n// import Footer from '../components/Footer/Footer';\r\n// import ModalSearch from '../components/Modal/ModalSearch';\r\n// import ModalMenu from '../components/Modal/ModalMenu';\r\n// import Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nclass Auctions extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                {/* <Breadcrumb title=\"Staking\" subpage=\"Explore\" page=\"Live Auctions\" /> */}\r\n                <AuctionsTwo />\r\n                {/* <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup /> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Auctions;","import { ChakraProvider, useDisclosure } from \"@chakra-ui/react\";\nimport theme from \"./theme\";\nimport \"@fontsource/inter\";\n\nimport Auctions from \"./theme/auctions\";\n\nfunction App() {\n  return (\n      <ChakraProvider theme={theme}>\n          <Auctions />\n      </ChakraProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { DAppProvider } from \"@usedapp/core\";\nimport {RefreshContextProvider} from './components/RefreshContext'\n\nReactDOM.render(\n  <React.StrictMode>\n    <RefreshContextProvider>\n      <DAppProvider config={{}}>\n        <App />\n      </DAppProvider>\n    </RefreshContextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}